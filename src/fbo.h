#ifndef _KARIN_FBO_H
#define _KARIN_FBO_H

#include <GLES/gl.h>
#include <GLES/glext.h>

#define GL_NONE GL_NONE_OES
#define GL_FRAMEBUFFER GL_FRAMEBUFFER_OES
#define GL_RENDERBUFFER GL_RENDERBUFFER_OES
#define GL_RGBA4 GL_RGBA4_OES
#define GL_RGB5_A1 GL_RGB5_A1_OES
#define GL_RGB565 GL_RGB565_OES
#define GL_DEPTH_COMPONENT16 GL_DEPTH_COMPONENT16_OES
#define GL_RENDERBUFFER_WIDTH GL_RENDERBUFFER_WIDTH_OES
#define GL_RENDERBUFFER_HEIGHT GL_RENDERBUFFER_HEIGHT_OES
#define GL_RENDERBUFFER_INTERNAL_FORMAT GL_RENDERBUFFER_INTERNAL_FORMAT_OES
#define GL_RENDERBUFFER_RED_SIZE GL_RENDERBUFFER_RED_SIZE_OES
#define GL_RENDERBUFFER_GREEN_SIZE GL_RENDERBUFFER_GREEN_SIZE_OES
#define GL_RENDERBUFFER_BLUE_SIZE GL_RENDERBUFFER_BLUE_SIZE_OES
#define GL_RENDERBUFFER_ALPHA_SIZE GL_RENDERBUFFER_ALPHA_SIZE_OES
#define GL_RENDERBUFFER_DEPTH_SIZE GL_RENDERBUFFER_DEPTH_SIZE_OES
#define GL_RENDERBUFFER_STENCIL_SIZE GL_RENDERBUFFER_STENCIL_SIZE_OES
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES
#define GL_COLOR_ATTACHMENT0 GL_COLOR_ATTACHMENT0_OES
#define GL_DEPTH_ATTACHMENT GL_DEPTH_ATTACHMENT_OES
#define GL_STENCIL_ATTACHMENT GL_STENCIL_ATTACHMENT_OES
#define GL_FRAMEBUFFER_COMPLETE GL_FRAMEBUFFER_COMPLETE_OES
#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES
#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES
#define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES
#define GL_FRAMEBUFFER_INCOMPLETE_FORMATS GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES
#define GL_FRAMEBUFFER_UNSUPPORTED GL_FRAMEBUFFER_UNSUPPORTED_OES
#define GL_FRAMEBUFFER_BINDING GL_FRAMEBUFFER_BINDING_OES
#define GL_RENDERBUFFER_BINDING GL_RENDERBUFFER_BINDING_OES
#define GL_MAX_RENDERBUFFER_SIZE GL_MAX_RENDERBUFFER_SIZE_OES
#define GL_INVALID_FRAMEBUFFER_OPERATION GL_INVALID_FRAMEBUFFER_OPERATION_OES

extern PFNGLISRENDERBUFFEROESPROC qglIsRenderbuffer;
extern PFNGLBINDRENDERBUFFEROESPROC qglBindRenderbuffer;
extern PFNGLDELETERENDERBUFFERSOESPROC qglDeleteRenderbuffers;
extern PFNGLGENRENDERBUFFERSOESPROC qglGenRenderbuffers;
extern PFNGLRENDERBUFFERSTORAGEOESPROC qglRenderbufferStorage;
extern PFNGLGETRENDERBUFFERPARAMETERIVOESPROC qglGetRenderbufferParameteriv;
extern PFNGLISFRAMEBUFFEROESPROC qglIsFramebuffer;
extern PFNGLBINDFRAMEBUFFEROESPROC qglBindFramebuffer;
extern PFNGLDELETEFRAMEBUFFERSOESPROC qglDeleteFramebuffers;
extern PFNGLGENFRAMEBUFFERSOESPROC qglGenFramebuffers;
extern PFNGLCHECKFRAMEBUFFERSTATUSOESPROC qglCheckFramebufferStatus;
extern PFNGLFRAMEBUFFERRENDERBUFFEROESPROC qglFramebufferRenderbuffer;
extern PFNGLFRAMEBUFFERTEXTURE2DOESPROC qglFramebufferTexture2D;
extern PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVOESPROC qglGetFramebufferAttachmentParameteriv;
extern PFNGLGENERATEMIPMAPOESPROC qglGenerateMipmap;

enum{
	Depth_Render_Buffer = 0,
	Total_Render_Buffer,
	Stencil_Render_Buffer,
};
enum{
	Vertex_Buffer = 0,
	TexCoord_Buffer,
	Total_Buffer,
};

typedef struct class_karin_FrameBufferObject
{
	unsigned m_inited;
	GLuint m_handle;
	GLuint m_texture;
	GLuint m_renderBuffer[Total_Render_Buffer];
	GLuint m_viewportWidth;
	GLuint m_viewportHeight;
	GLuint m_width;
	GLuint m_height;
	GLuint m_buffer[Total_Buffer];

	void (*bind)(struct class_karin_FrameBufferObject *fbo);
	void (*unbind)(struct class_karin_FrameBufferObject *fbo);
	unsigned (*isBind)(const struct class_karin_FrameBufferObject *fbo);
	void (*blit)(struct class_karin_FrameBufferObject *fbo);
	void (*resize)(struct class_karin_FrameBufferObject *fbo, GLuint w, GLuint h, GLuint vw, GLuint vh);
	void (*delete__)(struct class_karin_FrameBufferObject *fbo);
} karin_FrameBufferObject;

karin_FrameBufferObject new_karin_FrameBufferObject(GLuint w, GLuint h, GLuint vw, GLuint vh);

#endif

